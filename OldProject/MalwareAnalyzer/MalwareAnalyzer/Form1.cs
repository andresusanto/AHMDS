using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Diagnostics;
using System.Threading;

namespace MalwareAnalyzer
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            Control.CheckForIllegalCrossThreadCalls = false;
            InitializeComponent();
        }

        private Sandboxie sbx = new Sandboxie(@"C:\Program Files\Sandboxie\32\SbieDll.dll");

        private void Form1_Load(object sender, EventArgs e)
        {
            
            box = sbx.EnumBoxes();


            proc = sbx.QueryEnumProcess(box[0]);

            Process.Start(@"C:\Program Files\Sandboxie\Start.exe", "/nosbiectrl /silent /box:" + box[0] + " delete_sandbox_silent exit 9").WaitForExit();

            Process regv = new Process();

            Process dumper = new Process {
                StartInfo = new ProcessStartInfo {
                    FileName = "regdmp.exe",
                    Arguments = @"D:\Project\AV\regdmp\regdump\RegHive",
                    UseShellExecute = false,
                    RedirectStandardOutput = true,
                    CreateNoWindow = true
                }
            };

            dumper.Start();
            while (!dumper.StandardOutput.EndOfStream)
            {
                string line = dumper.StandardOutput.ReadLine();
                Console.WriteLine(line);
                // do something with line
            }

            Process.Start(@"C:\Program Files\Sandboxie\Start.exe", "/nosbiectrl /silent /elevate /box:" + box[0] + " calc.exe");

            Thread worker = new Thread(watcher);

            worker.Start();
            
        }

        string[] box;
        ProcessInformation[] proc;

        private void watcher()
        {
            ProcessInformation[] skrg;
            do
            {
                skrg = sbx.QueryEnumProcess(box[0]);

            } while (skrg.Equals(proc));
            int i = 15;
            while (i > 0)
            {
                label1.Text = "Waiting ... " + i--;
                Thread.Sleep(1000);
            }

            label1.Text = "Killing";

            uint[] procz = sbx.EnumProcess(box[0]);

            foreach (uint p in procz)
            {
                ProcessInformation pi = sbx.QueryProcess(p);
                MessageBox.Show(pi.ProcessId + " " + pi.ImageName + " " + pi.SessionId + " " + pi.SidString);
            }

            sbx.KillAll(box[0]);

            label1.Text = "Done";
        }
    }
}
